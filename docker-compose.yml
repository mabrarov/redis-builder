version: '2.1'

x-redis-conf-producer-volume: &redis-conf-producer-volume 'redis-config:/config:rw'
x-redis-conf-consumer-volume: &redis-conf-consumer-volume 'redis-config:/config:ro'
x-redis-conf-file: &redis-conf-file '/config/redis.conf'
x-redis-port: &redis-port '6379'
x-redis-port-mapping: &redis-port-mapping '6379:6379'
x-redis-data-dir: &redis-data-dir '/data'
x-helper-dir: &helper-dir '/helper'
x-helper-wrapper-script: &helper-wrapper-script '/helper/run.sh'
x-helper-dockerize: &helper-dockerize '/helper/dockerize'

volumes:
  redis-config:

services:
  helper:
    image: '${IMAGE_REGISTRY:-abrarov}/redis-helper:${PROJECT_VERSION:-1.0.4}'
    read_only: true
    volumes:
      - *helper-dir

  init:
    image: '${IMAGE_REGISTRY:-abrarov}/redis-init:${PROJECT_VERSION:-1.0.4}'
    command: *helper-wrapper-script
    environment:
      INIT_COMMAND: '/run.sh'
      REDIS_CONFIG_FILE: *redis-conf-file
      REDIS_PORT: *redis-port
      REDIS_LISTEN_BACKLOG: '128'
      REDIS_PROTECTED_MODE: 'no'
      REDIS_DATA_DIR: *redis-data-dir
    read_only: true
    volumes:
      - '/tmp'
      - *redis-conf-producer-volume
    volumes_from:
      - 'helper:ro'

  redis:
    image: '${IMAGE_REGISTRY:-abrarov}/redis:${REDIS_VERSION:-6.0.9}-${PROJECT_VERSION:-1.0.4}'
    command:
      - *helper-dockerize
      - '-wait'
      - 'tcp://init:8080'
      - '-timeout'
      - '60s'
      - 'redis-server'
      - *redis-conf-file
    healthcheck:
      test:
        - 'CMD'
        - 'redis-cli'
        - '-h'
        - '127.0.0.1'
        - '-p'
        - *redis-port
        - 'ping'
      interval: '30s'
      timeout: '5s'
      retries: 3
    read_only: true
    volumes:
      - '/tmp'
      - *redis-conf-consumer-volume
      - *redis-data-dir
    volumes_from:
      - 'helper:ro'
    ports:
      - *redis-port-mapping
